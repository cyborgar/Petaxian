; Title
;  - Have to split in two since ubyte array max at 256 chars
;  27 x 5 in each half 
;

title {

  ; Title top
  ubyte[] title_p1 = [
    $20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$7B,$6C,$20,$7B,$6C,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,
    $20,$46,$46,$46,$46,$46,$46,$46,$46,$46,$46,$46,$46,$46,$46,$46,$46,$46,$46,$46,$46,$5F,$F7,$F7,$F7,$69,$46,$46,$46,$46,$46,$46,$46,$46,$46,$46,$46,$46,$46,$20,
    $20,$63,$63,$63,$63,$63,$63,$63,$63,$63,$63,$63,$63,$63,$63,$63,$63,$63,$63,$5F,$A0,$DF,$D7,$D7,$D7,$E9,$A0,$69,$63,$63,$63,$63,$63,$63,$63,$63,$63,$63,$63,$20,
    $20,$A0,$A0,$A0,$DF,$20,$A0,$A0,$A0,$A0,$20,$A0,$A0,$A0,$A0,$20,$E9,$A0,$A0,$DF,$5F,$A0,$E3,$E3,$E3,$A0,$69,$E9,$A0,$20,$E9,$A0,$A0,$DF,$20,$A0,$DF,$20,$A0,$20,
    $20,$A0,$A0,$20,$A0,$20,$A0,$A0,$20,$20,$20,$20,$A0,$A0,$20,$20,$A0,$A0,$E1,$A0,$20,$5F,$A0,$A0,$A0,$69,$20,$A0,$A0,$20,$A0,$A0,$E1,$A0,$20,$A0,$A0,$DF,$A0,$20
  ]

  ; Title bottom
  ubyte[] title_p2 = [
    $20,$A0,$A0,$A0,$69,$20,$A0,$A0,$A0,$20,$20,$20,$A0,$A0,$20,$20,$A0,$A0,$A0,$A0,$20,$E9,$A0,$A0,$A0,$DF,$20,$A0,$A0,$20,$A0,$A0,$A0,$A0,$20,$A0,$A0,$A0,$A0,$20,
    $20,$A0,$A0,$20,$20,$20,$A0,$A0,$20,$20,$20,$20,$A0,$A0,$20,$20,$A0,$A0,$E1,$A0,$20,$A0,$A0,$20,$A0,$A0,$20,$A0,$A0,$20,$A0,$A0,$E1,$A0,$20,$A0,$A0,$5F,$A0,$20,
    $20,$62,$62,$20,$20,$20,$62,$62,$62,$62,$20,$20,$62,$62,$20,$20,$62,$62,$6C,$62,$20,$62,$62,$20,$62,$62,$20,$62,$62,$20,$62,$62,$6C,$62,$20,$62,$62,$20,$62,$20,
    $20,$64,$64,$64,$64,$64,$64,$64,$64,$64,$64,$64,$64,$64,$64,$64,$64,$64,$64,$64,$64,$64,$64,$64,$64,$64,$64,$64,$64,$64,$64,$64,$64,$64,$64,$64,$64,$64,$64,$20,
    $20,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$20
  ]

  ; screen color data
  ubyte[] colors_p1 = [
    $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0D,$0D,$0D,$0D,$0D,$0E,$0E,$0E,$00,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,
    $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$0D,$0D,$0D,$0D,$0D,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,
    $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,
    $03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,
    $0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D
  ]

  ubyte[] colors_p2 = [
    $0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,
    $05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,
    $05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,
    $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,
    $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01
  ]

  const ubyte TITLE_WDT = 40
  const ubyte TITLE_HGT = 5

  sub draw() {
    ubyte i
    for i in 0 to (TITLE_WDT * TITLE_HGT - 1) {
      txt.setcc( (i % TITLE_WDT), base.UBORDER + (i/TITLE_WDT), title_p1[i], colors_p1[i] )
      txt.setcc( (i % TITLE_WDT), base.UBORDER + 5 + (i/TITLE_WDT), title_p2[i], colors_p2[i] )
    }
  }

}
