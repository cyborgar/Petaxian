; Splash title
;  - Have to split in two since ubyte array max at 256 chars
;  27 x 8 in top 
;  27 x 2 in bottom line

splash {

  ; screen character data
  ubyte[] title = [
    $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $7B, $20, $20, $6C, $20, $20, $20, $20, $20,
    $64, $64, $64, $64, $64, $64, $64, $64, $64, $64, $64, $64, $64, $64, $64, $64, $64, $64, $5F, $F7, $F7, $69, $64, $64, $64, $64, $64,
    $63, $63, $63, $63, $63, $63, $63, $63, $63, $63, $63, $63, $63, $63, $63, $63, $5F, $A0, $DF, $D7, $D7, $E9, $A0, $69, $63, $63, $63,
    $E9, $A0, $A0, $A0, $20, $E9, $A0, $A0, $DF, $E1, $A0, $20, $20, $E9, $A0, $A0, $DF, $5F, $A0, $E3, $E3, $A0, $69, $E9, $A0, $A0, $DF,
    $A0, $A0, $20, $20, $20, $A0, $A0, $E1, $A0, $E1, $A0, $20, $20, $A0, $A0, $E1, $A0, $20, $5F, $A0, $A0, $69, $20, $A0, $A0, $E1, $A0,
    $A0, $A0, $E1, $A0, $20, $A0, $A0, $A0, $A0, $E1, $A0, $20, $20, $A0, $A0, $A0, $A0, $20, $E9, $A0, $A0, $DF, $20, $A0, $A0, $A0, $A0,
    $A0, $A0, $20, $A0, $20, $A0, $A0, $E1, $A0, $E1, $A0, $20, $20, $A0, $A0, $E1, $A0, $20, $A0, $A0, $E1, $A0, $20, $A0, $A0, $E1, $A0,
    $6C, $62, $62, $62, $20, $62, $62, $6C, $62, $6C, $62, $62, $7B, $62, $62, $6C, $62, $20, $62, $62, $6C, $62, $20, $62, $62, $6C, $62 ]

  ubyte[] line = [
    $64, $64, $64, $64, $64, $64, $64, $64, $64, $64, $64, $64, $64, $64, $64, $64, $64, $64, $64, $64, $64, $64, $64, $64, $64, $64, $64,
    $63, $63, $63, $63, $63, $63, $63, $63, $63, $63, $63, $63, $63, $63, $63, $63, $63, $63, $63, $63, $63, $63, $63, $63, $63, $63, $63 ]

; screen color data
  ubyte[] colors = [
    $0E, $0E, $0E, $0E, $0E, $0E, $0E, $0E, $0E, $0E, $0E, $0E, $0E, $0E, $0E, $0E, $0E, $0E, $0D, $0D, $0D, $0D, $0E, $0E, $0E, $0E, $0E,
    $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $0D, $0D, $0D, $0D, $01, $01, $01, $01, $01,
    $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01,
    $03, $03, $03, $03, $0E, $03, $03, $03, $03, $03, $03, $0E, $0E, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03,
    $0D, $0D, $0E, $0E, $0E, $0D, $0D, $0D, $0D, $0D, $0D, $0E, $0E, $0D, $0D, $0D, $0D, $0E, $0D, $0D, $0D, $0D, $0E, $0D, $0D, $0D, $0D,
    $0D, $0D, $0D, $0D, $0E, $0D, $0D, $0D, $0D, $0D, $0D, $0E, $0E, $0D, $0D, $0D, $0D, $0E, $0D, $0D, $0D, $0D, $0E, $0D, $0D, $0D, $0D,
    $05, $05, $0E, $05, $0E, $05, $05, $05, $05, $05, $05, $0E, $0E, $05, $05, $05, $05, $0E, $05, $05, $05, $05, $0E, $05, $05, $05, $05,
    $05, $05, $05, $05, $0E, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $0E, $05, $05, $05, $05, $0E, $05, $05, $05, $05 ]

  ubyte[] colors_line = [
    $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01,
    $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01 ]

  const ubyte WDT = 27
  const ubyte HGT = 8

  ubyte i

  sub clear(ubyte x, ubyte y) {
    for i in 0 to (WDT*HGT - 1) {
      txt.setcc( x + (i % WDT), y + (i/WDT), main.CLR, 0 )
    }
    y += HGT
    for i in 0 to (WDT*2 - 1) {
      txt.setcc( x + (i % WDT), y + (i/WDT), main.CLR, 0 )
    }
    y=15
    for i in 0 to WDT-1 {
      txt.setcc( x + i, y, main.CLR, 0 )
    }

  }

  sub draw(ubyte x, ubyte y) {
    for i in 0 to (WDT*HGT - 1) {
      txt.setcc( x + (i % WDT), y + (i/WDT), title[i], colors[i] )
    }
    y+=HGT
    for i in 0 to (WDT*2 - 1) {
      txt.setcc( x + (i % WDT), y + (i/WDT), line[i], colors_line[i] )
    }
  }

  sub write(ubyte col, ubyte x, ubyte y, uword messageptr) {
    txt.color(col)
    txt.plot( x, y )
    txt.print( messageptr )
  }

}
